# Problem:
# Given: A DNA string s of length at most 1000 bp.
# Return: The reverse complement sc of s.

revc = 'CCCAAGAATCGATCCCACGCAACCCCGACCGGACAGGGTCCGGCATAAGAGTGACCCGATTCATCAACTTCTCGCGATGATTGCATGCCTTGTACAACCGAGAGCTGGCTGACCCCTTGAGGCAAAACTGATCATGCCTGTCCAACCGAATTGAATTGCGTGTATTCGCTCTACACGCGTCATCCGTCAGGACTGTACCCTGCTTCTCCCCCAGTAAAAAGTCTCTTTTTCCCAGCCATAACAGACTAATCCATAGGACACGGGTGCCCGTAGCGGTTGGCTTATGATCTATGAGCAGACGGTGGGCGAACGGCGGGGGGGATGCATACCGTGATGGGACCGTCCGCCGGAGGGACCTGCAAGCTCAGCAATATCCAAGAACTAAATTGGGGCCCTTCCCGCCACTGTCGCTGGCAATGCCCAAAATCGAAAGACTACGGGGACATATAAAGATTTCTGCACGGCCCTCATTAGGTCCCCATGCCGCCACGTGCCGTTCATACAAGTTCGAGGACTTAGCTGCGTTTCCAGAAAAACCAGAGACGCAGCCGAACCTTTTCTCTGGTCTCATATAACTATGAGATTAAATCCAAGGATGCCGGCCAACTTGGTCTCTGTAAGTGTTTACGTCACGTGAACCGTAATCTAGAGAATCATTTGCGTCGACACGAGTGCCTATCTCTTTATGAGCGCCACGGCATTTATTTTGAGCCGCTGTGTTTGACCCATCTCGAGCTCGCGAGAAAGATTCTTCTGGAATATCATCTTTCTTGATTAACTCGCGGGAATAACAAGTAGGTTGCTGGGGGCCTGTTTTAGAATAGTCGGGCAGCACTATTTTACACAAAGCTATCATTGCGTTCCTTAGACAGTCCTGTGCTACATGGTACTTAGTACCTTCCGTAGGGGGGCATAATTAGATGTGTTTGCAGTATTTCTCCCCACTCTGGCTAACTGCGCGTGTTG'

def s_to_sc(dna):
    sc = ''
    dic = {'A':'T', 'T':'A', 'C':'G', 'G':'C'}
    for n in dna:
        sc += dic[n]
    return sc[::-1]


s_to_sc(revc)

# output:
'CAACACGCGCAGTTAGCCAGAGTGGGGAGAAATACTGCAAACACATCTAATTATGCCCCCCTACGGAAGGTACTAAGTACCATGTAGCACAGGACTGTCTAAGGAACGCAATGATAGCTTTGTGTAAAATAGTGCTGCCCGACTATTCTAAAACAGGCCCCCAGCAACCTACTTGTTATTCCCGCGAGTTAATCAAGAAAGATGATATTCCAGAAGAATCTTTCTCGCGAGCTCGAGATGGGTCAAACACAGCGGCTCAAAATAAATGCCGTGGCGCTCATAAAGAGATAGGCACTCGTGTCGACGCAAATGATTCTCTAGATTACGGTTCACGTGACGTAAACACTTACAGAGACCAAGTTGGCCGGCATCCTTGGATTTAATCTCATAGTTATATGAGACCAGAGAAAAGGTTCGGCTGCGTCTCTGGTTTTTCTGGAAACGCAGCTAAGTCCTCGAACTTGTATGAACGGCACGTGGCGGCATGGGGACCTAATGAGGGCCGTGCAGAAATCTTTATATGTCCCCGTAGTCTTTCGATTTTGGGCATTGCCAGCGACAGTGGCGGGAAGGGCCCCAATTTAGTTCTTGGATATTGCTGAGCTTGCAGGTCCCTCCGGCGGACGGTCCCATCACGGTATGCATCCCCCCCGCCGTTCGCCCACCGTCTGCTCATAGATCATAAGCCAACCGCTACGGGCACCCGTGTCCTATGGATTAGTCTGTTATGGCTGGGAAAAAGAGACTTTTTACTGGGGGAGAAGCAGGGTACAGTCCTGACGGATGACGCGTGTAGAGCGAATACACGCAATTCAATTCGGTTGGACAGGCATGATCAGTTTTGCCTCAAGGGGTCAGCCAGCTCTCGGTTGTACAAGGCATGCAATCATCGCGAGAAGTTGATGAATCGGGTCACTCTTATGCCGGACCCTGTCCGGTCGGGGTTGCGTGGGATCGATTCTTGGG'
